from ultralytics import YOLO
import os
import cv2

# 첫 번째 단계 (Pretrained 모델로 초기 학습 진행)
def first_stage_training():
    # YOLO 모델 로드 (Pretrained 모델 사용)
    model = YOLO('/home/jovyan/yolo11obb/yolo11l-obb.pt')

    # 학습에 사용할 데이터셋 경로를 정의한 .yaml 파일 경로
    train_data = '/home/jovyan/data-vol-1/Y_T_Data/new_obb.yaml'

    # 학습 결과를 저장할 디렉토리 생성
    output_dir = '/home/jovyan/data-vol-1/Y_T_Result/new_obb/1st_yolov11l_16b_50e'
    os.makedirs(output_dir, exist_ok=True)

    # 첫 번째 단계 학습 실행
    model.train(data=train_data, epochs=1, imgsz=640, batch=16, lr0=0.001, device='cuda', amp=False, patience=30, val=False)

    # 학습된 모델 저장 (first stage 가중치 파일)
    model.save(os.path.join(output_dir, 'final_1st_yolov11l_obb_16b_50e.pt'))
    
    # 가중치 파일 경로 반환
    return os.path.join(output_dir, 'final_1st_yolov11l_obb_16b_50e.pt')

# 두 번째 단계 (첫 번째 학습 결과를 이용해 추가 학습 진행)
def second_stage_training(first_stage_weight):
    # YOLO 모델 로드 (첫 번째 단계 가중치 사용)
    model = YOLO(first_stage_weight)

    # 학습에 사용할 데이터셋 경로를 정의한 .yaml 파일 경로
    train_data = '/home/jovyan/data-vol-1/Y_T_Data/new_obb.yaml'

    # 두 번째 단계 학습 (미세 조정)
    output_dir = '/home/jovyan/data-vol-1/Y_T_Result/new_obb/2nd_yolov11l_16b_50e'
    os.makedirs(output_dir, exist_ok=True)

    # 두 번째 단계 학습 실행 (Batch Size 16, 추가 학습)
    model.train(data=train_data, epochs=1, imgsz=640, batch=16, lr0=0.0001, device='cuda', amp=False, val=False)

    # 학습된 모델 저장 (second stage 가중치 파일)
    model.save(os.path.join(output_dir, 'final_2nd_yolov11l_obb_16b_50e.pt'))

    return os.path.join(output_dir, 'final_2nd_yolov11l_obb_16b_50e.pt')

# 테스트 결과 저장 함수
def save_test_results(image_path, results, test_results_dir):
    # 결과 이미지 가져오기
    image = cv2.imread(image_path)
    filename = os.path.basename(image_path).replace('.JPG', '_result.png')
    result_image_path = os.path.join(test_results_dir, filename)

    # 결과가 있는지 확인
    if results is None or len(results) == 0:
        print(f"No detection results for {image_path}")
        return

    # 감지된 객체에 대한 바운딩 박스 그리기
    for result in results:
        if result is not None and hasattr(result, 'boxes') and result.boxes is not None:
            if hasattr(result.boxes, 'xyxy'):
                boxes = result.boxes.xyxy.cpu().numpy()  # bounding box 좌표 가져오기
                for box in boxes:
                    x1, y1, x2, y2 = box[:4].astype(int)
                    cv2.rectangle(image, (x1, y1), (x2, y2), (0, 255, 0), 2)  # 바운딩 박스를 이미지에 그리기
            else:
                print(f"'boxes' attribute has no 'xyxy' data for {image_path}")
        else:
            print(f"Result or result.boxes is None for {image_path}")

    # 결과 이미지를 파일로 저장
    cv2.imwrite(result_image_path, image)
    print(f"Saved result image to {result_image_path}")

    # 결과 텍스트 저장
    txt_filename = os.path.basename(image_path).replace('.JPG', '_result.txt')
    result_txt_path = os.path.join(test_results_dir, txt_filename)
    with open(result_txt_path, 'w') as f:
        f.write(f"Detected Objects:\n")
        for i, result in enumerate(results):
            if result is not None and hasattr(result, 'boxes') and result.boxes is not None:
                boxes = result.boxes.xyxy.cpu().numpy()  # bounding box 좌표 가져오기
                f.write(f"Object {i + 1}:\n")
                for box in boxes:
                    x1, y1, x2, y2 = box[:4].astype(int)
                    f.write(f"Bounding Box: ({x1}, {y1}), ({x2}, {y2})\n")
            else:
                f.write(f"No valid result or bounding box for Object {i + 1}\n")
    print(f"Results saved to {result_txt_path} and {result_image_path}")

# 테스트 실행 함수
def test_model(model, test_image_dir, test_results_dir):
    os.makedirs(test_results_dir, exist_ok=True)
    for image_file in os.listdir(test_image_dir):
        if image_file.endswith('.JPG'):  # .JPG 확장자 처리
            image_path = os.path.join(test_image_dir, image_file)
            # 테스트 수행
            results = model(image_path)
            save_test_results(image_path, results, test_results_dir)

# 전체 프로세스 실행
def main():
    # 첫 번째 단계 학습
    first_stage_weight = first_stage_training()

    # 두 번째 단계 학습
    second_stage_weight = second_stage_training(first_stage_weight)

    # 테스트 실행 (두 번째 단계 모델로 테스트)
    test_image_dir = '/home/jovyan/test_image'
    test_results_dir = '/home/jovyan/data-vol-1/Y_T_Result/new_obb'
    model = YOLO(second_stage_weight)
    test_model(model, test_image_dir, test_results_dir)

# 메인 실행
if __name__ == "__main__":
    main()
