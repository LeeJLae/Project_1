def save_test_results(image_path, results, test_results_dir):
    # 결과 이미지 가져오기
    image = cv2.imread(image_path)
    filename = os.path.basename(image_path).replace('.JPG', '_result.png')
    result_image_path = os.path.join(test_results_dir, filename)

    # 결과가 있는지 확인
    if results is None or len(results) == 0:
        print(f"No detection results for {image_path}")
        return

    # 감지된 객체에 대한 바운딩 박스 그리기
    for result in results:
        if result is not None and hasattr(result, 'boxes') and result.boxes is not None:
            if hasattr(result.boxes, 'xyxy'):
                boxes = result.boxes.xyxy.cpu().numpy()  # bounding box 좌표 가져오기
                for box in boxes:
                    x1, y1, x2, y2 = box[:4].astype(int)
                    cv2.rectangle(image, (x1, y1), (x2, y2), (0, 255, 0), 2)  # 바운딩 박스를 이미지에 그리기
            else:
                print(f"'boxes' attribute has no 'xyxy' data for {image_path}")
        else:
            print(f"Result or result.boxes is None for {image_path}")

    # 결과 이미지를 파일로 저장
    cv2.imwrite(result_image_path, image)
    print(f"Saved result image to {result_image_path}")

    # 결과 텍스트 저장
    txt_filename = os.path.basename(image_path).replace('.JPG', '_result.txt')
    result_txt_path = os.path.join(test_results_dir, txt_filename)
    with open(result_txt_path, 'w') as f:
        f.write(f"Detected Objects:\n")
        for i, result in enumerate(results):
            if result is not None and hasattr(result, 'boxes') and result.boxes is not None:
                boxes = result.boxes.xyxy.cpu().numpy()  # bounding box 좌표 가져오기
                f.write(f"Object {i + 1}:\n")
                for box in boxes:
                    x1, y1, x2, y2 = box[:4].astype(int)
                    f.write(f"Bounding Box: ({x1}, {y1}), ({x2}, {y2})\n")
            else:
                f.write(f"No valid result or bounding box for Object {i + 1}\n")
    print(f"Results saved to {result_txt_path} and {result_image_path}")

# 테스트 실행 함수
def test_model(model, test_image_dir, test_results_dir):
    os.makedirs(test_results_dir, exist_ok=True)
    for image_file in os.listdir(test_image_dir):
        if image_file.endswith(('.JPG', '.jpg', '.png')):  # 확장자 확인
            image_path = os.path.join(test_image_dir, image_file)
            # 테스트 수행
            results = model(image_path)
            if results is None or len(results) == 0:
                print(f"No detection results for {image_path}")
            save_test_results(image_path, results, test_results_dir)
