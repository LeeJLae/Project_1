from ultralytics import YOLO
import os

# YOLO 모델 로드
model = YOLO('/home/jovyan/yolo11obb/yolo11m-obb.pt')

# 학습에 사용할 데이터셋 경로를 정의한 .yaml 파일 경로
train_data = '/home/jovyan/data-vol-1/Y_T_Data/new_obb.yaml'

# 학습 결과를 저장할 디렉토리 생성
output_dir = '/home/jovyan/data-vol-1/Result/TEST1_yolov11m'
os.makedirs(output_dir, exist_ok=True)

# IoU 계산 함수
def calculate_iou(box1, box2):
    # box1, box2 format: [x1, y1, x2, y2, x3, y3, x4, y4]
    poly1 = Polygon([(box1[i], box1[i+1]) for i in range(0, len(box1), 2)])
    poly2 = Polygon([(box2[i], box2[i+1]) for i in range(0, len(box2), 2)])
    if not poly1.is_valid or not poly2.is_valid:
        return 0.0
    intersection = poly1.intersection(poly2).area
    union = poly1.union(poly2).area
    return intersection / union if union > 0 else 0

# 매 epoch의 손실 값 기록 함수
def save_loss_values(epoch, metrics):
    loss_path = os.path.join(output_dir, 'epoch_loss_results.txt')
    with open(loss_path, 'a') as f:
        f.write(f"Epoch {epoch}: Box Loss: {metrics.box_loss:.4f}, "
                f"Cls Loss: {metrics.cls_loss:.4f}, Dfl Loss: {metrics.dfl_loss:.4f}\n")

# 학습 실행 및 손실 저장 (검증 데이터 사용 안 함)
for epoch in range(50):
    metrics = model.train(data=train_data, epochs=1, imgsz=640, batch=16, lr0=0.001, device='cuda', amp=False, val=False)
    save_loss_values(epoch + 1, metrics)

# 학습된 모델 저장
model.save(os.path.join(output_dir, 'TEST5_yolov11m.pt'))

# 모델 평가 함수
def test_model():
    # model.predict 사용하여 테스트 수행 및 결과 저장
    results = model.predict(
        source=test_image_dir,  # 테스트할 이미지 폴더 경로
        save=True,              # 결과 이미지를 저장
        project=output_dir,     # 저장할 기본 디렉토리
        name="1step_YOLO_result"     # 결과를 저장할 하위 폴더 이름
    )
    print(f"Test results saved to: {os.path.join(output_dir, '1step_YOLO')}")
    
    # IoU 결과 저장할 파일 경로 설정
    iou_results_path = os.path.join(output_dir, '1step_YOLO', 'iou_results.txt')
    with open(iou_results_path, 'w') as f:
        for result in results:
            ground_truths = result.boxes  # 실제 바운딩 박스 (실제 데이터로 대체 가능)
            predictions = result.pred  # 예측된 바운딩 박스
            
            for gt_box, pred_box in zip(ground_truths, predictions):
                iou = calculate_iou(gt_box.xyxy, pred_box.xyxy)
                f.write(f"IoU for {result.path}: {iou:.4f}\n")
    
    print(f"IoU results saved to: {iou_results_path}")

# 테스트 실행
test_model()
