import os
import xml.etree.ElementTree as ET
import re

# XML 파일을 YOLO 형식의 TXT로 변환하는 함수
def convert_xml_to_yolo_format(input_xml_path, output_txt_path):
    tree = ET.parse(input_xml_path)
    root = tree.getroot()
    
    with open(output_txt_path, 'w') as f:
        for elem in root.iter("text"):
            # `<text>` 태그에서 2자리 또는 3자리 정수 값 추출
            match = re.search(r'\b\d{2,3}\b', elem.text)
            if match:
                value = int(match.group())
                # 예시: 클래스 ID 0, 중심_x 0.5, 중심_y 0.5, 너비와 높이는 추출한 값을 100으로 나눈 값, 각도 0
                f.write(f"0 0.5 0.5 {value / 100} {value / 100} 0\n")
    
    print(f"Converted XML to YOLO format TXT at: {output_txt_path}")

# 클래스 위치 정보와 계측 정보를 병합하는 함수
def combine_txt_files(class_location_txt, measurement_txt, output_combined_txt):
    with open(class_location_txt, 'r') as class_file, open(measurement_txt, 'r') as measure_file, open(output_combined_txt, 'w') as output_file:
        # 클래스 위치 정보 병합
        for class_line in class_file:
            output_file.write(class_line)
        
        # 계측 정보 병합
        for measure_line in measure_file:
            output_file.write(measure_line)
    
    print(f"Combined file created at: {output_combined_txt}")

# 경로 설정
input_xml_path = '/path/to/input.xml'             # XML 파일 경로
converted_txt_path = '/path/to/measurement.txt'   # 변환된 계측 정보 TXT 파일 경로
class_location_txt = '/path/to/class_location.txt' # 클래스 위치 정보 TXT 파일 경로
output_combined_txt = '/path/to/output_combined.txt' # 병합된 출력 파일 경로

# XML을 YOLO 형식의 TXT로 변환
convert_xml_to_yolo_format(input_xml_path, converted_txt_path)

# 클래스 위치 정보와 변환된 계측 정보를 병합
combine_txt_files(class_location_txt, converted_txt_path, output_combined_txt)
