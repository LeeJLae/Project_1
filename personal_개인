from ultralytics import YOLO
import os
from shapely.geometry import Polygon

# YOLO 모델 로드
model = YOLO('/home/jovyan/yolo11obb/yolo11m-obb.pt')

# 학습에 사용할 데이터셋 경로를 정의한 .yaml 파일 경로
train_data = '/home/jovyan/data-vol-1/Y_T_Data/new_obb.yaml'

# 학습 결과를 저장할 디렉토리 생성
output_dir = '/home/jovyan/data-vol-1/Result/YOLO/2Step_yolov11m'
os.makedirs(output_dir, exist_ok=True)

# IoU 계산 함수
def calculate_iou(box1, box2):
    poly1 = Polygon([(box1[i], box1[i+1]) for i in range(0, len(box1), 2)])
    poly2 = Polygon([(box2[i], box2[i+1]) for i in range(0, len(box2), 2)])
    if not poly1.is_valid or not poly2.is_valid:
        return 0.0
    intersection = poly1.intersection(poly2).area
    union = poly1.union(poly2).area
    return intersection / union if union > 0 else 0

# 1단계 학습 (Step LR만 사용)
model.train(
    data=train_data,
    epochs=1,
    imgsz=640,
    batch=16,
    lr0=0.001,
    device='cuda',
    amp=False,
    patience=40,
    val=False,
    hsv_h=0.015,
    hsv_s=0.7,
    hsv_v=0.4,
    flipud=0.5,
    fliplr=0.5,
    translate=0.1,
    scale=0.5,
    shear=0.2,
    perspective=0.1,
    mosaic=1.0,
    copy_paste=1.0,
    lr_scheduler='step',  # Step LR 스케줄러 사용
    step_size=10,         # 학습률 감소 주기
    gamma=0.5             # 학습률 감소율
)

# 1단계 학습된 모델 저장
model_save_path = os.path.join(output_dir, '2Step_1st.pt')
model.save(model_save_path)

# 1단계 학습된 파라미터로 모델 재로드
model = YOLO(model_save_path)

# 2단계 학습 (Step LR만 사용)
model.train(
    data=train_data,
    epochs=1,
    imgsz=640,
    batch=16,
    lr0=0.0001,
    device='cuda',
    amp=False,
    val=False,
    hsv_h=0.015,
    hsv_s=0.7,
    hsv_v=0.4,
    flipud=0.5,
    fliplr=0.5,
    translate=0.1,
    scale=0.5,
    shear=0.2,
    perspective=0.1,
    mosaic=1.0,
    copy_paste=1.0,
    lr_scheduler='step',  # Step LR 스케줄러 사용
    step_size=10,         # 학습률 감소 주기
    gamma=0.5             # 학습률 감소율
)

# 2단계 학습된 모델 저장
model.save(os.path.join(output_dir, '2Step_2nd.pt'))

# 테스트 이미지 경로 설정
test_image_dir = '/home/jovyan/data-vol-1/trashcan/test_image2'

# 모델 평가 함수
def test_model():
    results_folder = os.path.join(output_dir, '2step_YOLO_result')
    os.makedirs(results_folder, exist_ok=True)  # 결과 폴더가 없으면 생성
    
    results = model.predict(
        source=test_image_dir,
        save=True,
        project=output_dir,
        name="2step_YOLO_result"
    )
    print(f"Test results saved to: {results_folder}")
    
    iou_results_path = os.path.join(results_folder, 'iou_results.txt')
    with open(iou_results_path, 'w') as f:
        for result in results:
            ground_truths = result.boxes.xyxy  # 실제 바운딩 박스 좌표
            predictions = result.boxes.xyxy  # 예측된 바운딩 박스 좌표
            
            for gt_box, pred_box in zip(ground_truths, predictions):
                iou = calculate_iou(gt_box, pred_box)
                f.write(f"IoU for {result.path}: {iou:.4f}\n")
    
    print(f"IoU results saved to: {iou_results_path}")

# 테스트 실행
test_model()
