from ultralytics import YOLO
import pytesseract
import cv2
import re
import os

# 학습된 YOLO 모델 로드
weight_path = '/home/jovyan/data-vol-1/Result/2_Measure/YOLO/WB/YOLO_WB.pt'  # 학습된 모델 가중치 경로
model = YOLO(weight_path)

# OCR 설정 및 나노미터 단위 텍스트 필터링 정규 표현식
nm_pattern = re.compile(r'(\d+)\s*n\s*m', re.IGNORECASE)  # "nm" 또는 "NM"이 포함된 텍스트 필터링

# 텍스트 클래스의 바운딩 박스에 OCR 적용 및 나노미터 인식 함수
def detect_nm_text(image, bbox):
    x1, y1, x2, y2 = map(int, bbox)  # YOLO 바운딩 박스 좌표
    roi = image[y1:y2, x1:x2]        # 텍스트 영역 선택 (ROI)

    # OCR 적용
    text = pytesseract.image_to_string(roi, config='--psm 6')
    print(f"OCR detected text: {text}")  # OCR 결과 확인

    # nm 텍스트 필터링 및 값 추출
    match = nm_pattern.search(text)
    if match:
        return int(match.group(1))  # "nm" 단위 앞의 숫자 반환
    return None

# YOLO 및 OCR 결과 저장 함수
def test_yolo_with_ocr(model, test_image_folder, output_folder):
    results_folder = os.path.join(output_folder, 'test_results')
    os.makedirs(results_folder, exist_ok=True)

    txt_output_path = os.path.join(results_folder, 'detection_results.txt')

    # 테스트 이미지 처리
    results = model.predict(source=test_image_folder, save=True, project=output_folder, name="test_results")
    print(f"Test results saved to: {results_folder}")

    # 결과 TXT 파일 생성
    with open(txt_output_path, 'w') as txt_file:
        for result in results:
            image_name = os.path.basename(result.path)
            image = cv2.imread(result.path)
            txt_file.write(f"Image: {image_name}\n")

            # 검출된 객체 및 텍스트 클래스 처리
            for box in result.boxes:
                class_id = int(box.cls)  # 클래스 ID (객체 또는 텍스트)
                bbox = box.xyxy[0].tolist()  # 바운딩 박스 좌표

                if class_id == 1:  # 텍스트 클래스 ID
                    nm_value = detect_nm_text(image, bbox)  # OCR로 나노미터 텍스트 확인
                    if nm_value is not None:
                        txt_file.write(f"Class: Text, BBox: {bbox}, Detected nm value: {nm_value} nm\n")
                    else:
                        txt_file.write(f"Class: Text, BBox: {bbox}, Detected nm value: None\n")
                else:
                    txt_file.write(f"Class: Object, BBox: {bbox}\n")

    print(f"Detection results saved to: {txt_output_path}")

# 실행 예제
test_image_folder = '/home/jovyan/data-vol-1/dataset_WB/test/images'  # 테스트 이미지 폴더 경로
output_folder = '/home/jovyan/data-vol-1/Result/2_Measure/YOLO/WB'

# 텍스트 및 객체 검출
test_yolo_with_ocr(model, test_image_folder, output_folder)
