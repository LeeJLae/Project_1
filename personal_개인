#########################################################################
# 폴더내 모든 파일 기반 IOU 및 회전된 이미지 생성
#########################################################################
# 요청1) 회전된 이미지 도출 // Detection된 b-box 중 class 1,2,5의 b-box의 회전된 평균 값을 구하고 그것을 기준으로 0도로 맞춤
# 그런데 image내에 3개 class가 다 없을 수 있으니 3개 중 있는 것들 기준으로 부탁해
#  test시에 class 1,2,5 기준 IOU가 몇인지도 알고 싶어
#########################################################################
#
#
#


from ultralytics import YOLO
import os
import cv2
import random
from shapely.geometry import Polygon
import numpy as np



# YOLO 모델 로드
model = YOLO('/home/jovyan/yolo11obb/yolo11m-obb.pt')

# 학습 데이터 경로와 결과 저장 디렉토리 설정
train_data = '/home/jovyan/data-vol-1/Y_T_Data/new_obb.yaml'
output_dir = '/home/jovyan/data-vol-1/Result/YOLO/NEW/yolov11m_1e_test'
os.makedirs(output_dir, exist_ok=True)

# IoU 계산 함수
def calculate_iou(box1, box2):
    poly1 = Polygon([(box1[i], box1[i+1]) for i in range(0, len(box1), 2)])
    poly2 = Polygon([(box2[i], box2[i+1]) for i in range(0, len(box2), 2)])
    if not poly1.is_valid or not poly2.is_valid:
        return 0.0
    intersection = poly1.intersection(poly2).area
    union = poly1.union(poly2).area
    return intersection / union if union > 0 else 0

# 정답 바운딩 박스를 읽어오는 함수
def load_ground_truth_boxes(label_folder, image_name):
    label_path = os.path.join(label_folder, os.path.splitext(image_name)[0] + '.txt')
    boxes = []
    if os.path.exists(label_path):
        with open(label_path, 'r') as f:
            for line in f.readlines():
                _, *coords = map(float, line.strip().split())
                boxes.append(coords)
    else:
        print(f"Warning: Ground truth file {label_path} not found.")
    return boxes

# 클래스 1, 2, 5에 대한 평균 회전 각도 계산
def get_average_rotation_angle(bboxes):
    angles = []
    for bbox in bboxes:
        if bbox.cls in [1, 2, 5]:
            x1, y1, x2, y2 = bbox.xyxy[0], bbox.xyxy[1], bbox.xyxy[2], bbox.xyxy[3]  # 두 점의 좌표
            angle = np.arctan2(y2 - y1, x2 - x1) * 180 / np.pi  # 각도 계산
            angles.append(angle)
            print(f"Debug: Calculated angle {angle:.2f} for class {bbox.cls}, coords: {bbox.xyxy}")
    
    mean_angle = np.mean(angles) if angles else 0
    print(f"Debug: Mean rotation angle = {mean_angle:.2f}")
    return mean_angle

# 이미지 회전 함수
def rotate_image(image, angle):
    (h, w) = image.shape[:2]
    center = (w // 2, h // 2)
    matrix = cv2.getRotationMatrix2D(center, -angle, 1.0)
    return cv2.warpAffine(image, matrix, (w, h))

# 모델 학습
model.train(
    data=train_data,
    epochs=1,
    imgsz=640,
    batch=16,
    lr0=0.001,
    device='cuda',
    amp=False,
    val=False
)


# 학습된 모델 저장
model.save(os.path.join(output_dir, 'yolov11m_1e_test.pt'))

# 테스트 이미지 및 레이블 폴더 경로
test_image_folder = '/home/jovyan/data-vol-1/dataset/test/images_test'
label_folder = '/home/jovyan/data-vol-1/dataset/test/labels_test'

# 모델 평가 함수
# 모델 평가 함수
def test_model():
    results_folder = os.path.join(output_dir, 'yolov11m_1e_test')
    rotated_images_folder = os.path.join(results_folder, 'rotated_images')
    os.makedirs(rotated_images_folder, exist_ok=True)

    results = model.predict(
        source=test_image_folder,
        save=True,
        project=output_dir,
        name="yolov11m_1e_test"
    )

    iou_results_path = os.path.join(results_folder, 'iou_results.txt')
    rotation_angles_path = os.path.join(results_folder, 'rotation_angles.txt')

    with open(iou_results_path, 'w') as iou_file, open(rotation_angles_path, 'w') as angle_file:
        for result in results:
            image_name = os.path.basename(result.path)
            ground_truths = load_ground_truth_boxes(label_folder, image_name)
            predictions = result.boxes if result.boxes is not None else []
            angle = get_average_rotation_angle([bbox for bbox in predictions if bbox.cls in [1, 2, 5]])
            
            # 회전 각도가 0이 아닐 경우 이미지 회전
            if angle != 0:
                image = cv2.imread(result.path)
                rotated_image = rotate_image(image, angle)
                cv2.imwrite(os.path.join(rotated_images_folder, image_name), rotated_image)

            # IoU 계산
            for gt_box, pred_box in zip(ground_truths, predictions):
                if pred_box.cls in [1, 2, 5]:
                    iou = calculate_iou(gt_box, pred_box.tolist())
                    iou_file.write(f"Image {image_name}, Class {int(pred_box.cls)}, IoU: {iou:.4f}\n")

            angle_file.write(f"Image {image_name}: Rotation Angle = {angle:.2f} degrees\n")
    
    print(f"IoU results saved to: {iou_results_path}")
    print(f"Rotation angles saved to: {rotation_angles_path}")
    print(f"Rotated images saved to: {rotated_images_folder}")

# 테스트 실행
test_model()
